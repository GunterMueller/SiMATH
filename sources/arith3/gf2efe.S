/*M
.SH NAME
gf2efe - Galois-field with characteristic 2 embedding in field extension

.SH SYNOPSIS
.nf
#include<_arith3.h>

gf2el gf2efe(GmtoGn, gm)  
list GmtoGn; 
gf2el gm;
       
.SH DESCRIPTION
.TP 4
.B GmtoGn
is a list given by gf2ies(Gm, Gn, n) (s. gf2ies)
.TP 4
.B gm
is an element in Gm.
.PP
gf2efe returns the representation of the isomorphic embedding of gm in the field extension generated by Gn.

.SH SEE ALSO
gf2ies

M*/
        
/*H
	Version 1	15.09.1993	Michael Pfeifer
   DATE gf2efe        : 931130
H*/

#include <_arith3.h>

gf2el           gf2efe(GmtoGn, gm)
    list            GmtoGn;
    gf2el           gm;
{
    bind(GmtoGn);
    bind(gm);

    if (gm == 0)
    {

	/*
	 * Ein Trivialfall.
	 */

	return (0);
    }
    else
    {
	gf2el           ed;
	gf2el           gn;
	gf2el           sum;
	list            L;
	obj             Gn;
	single          exp;

	init(ed);
	init(gn);
	init(sum);
	init(L);
	init(Gn);

	Gn = lfirst(GmtoGn);
	ed = lsecond(GmtoGn);

	/*
	 * Das Element gm wird eingebettet (und dabei kurz als Liste
	 * aufgefasst). Der erste Parameter der Funktion gf2eltoudpm2 (das
	 * definierende Polynom des Grundkoerpers) ist im Programm nicht
	 * wirklich notwendig, kann also durch eine 0 (beispielsweise)
	 * benutzt werden.
	 */

	gn = 0;

	L = gf2eltoudpm2(0, gm);
	L = dptop(1, L);

#ifdef DEBUG
	printf("\n(*** DEBUG ***) gf2efe(): Listendarstellung des");
	printf("Argumentes");
	printf("\n(*** DEBUG ***) gf2efe(): gm = ");
	puto(L);
	fflush(stdout);
#endif

	while (L != _0)
	{
	    exp = lfirst(L);
	    L = lred2(L);
	    sum = gf2exp(Gn, ed, exp);
	    gn = gf2sum(Gn, gn, sum);
	}
	return (gn);
    }
}
