/*M
.SH NAME
vpnftransf - vector of polynomials over number field, transformation

.SH SYNOPSIS
.nf
#include<_matr3.h>

vec vpnftransf(r1, F, W1, V1, r2, P2, V2, Vn, pV3)
single r1,r2;
pol F;
vec W1;
pol P2;
list V1,V2,Vn,*pV3;

.SH DESCRIPTION
vpnftransf() returns the vector
which arises by replacing the variable Vn by
the polynomial P2 in the vector W1.
The resulting variable list will be stored in *pV3.

.PP
.TP 4
.B F
is an irreducible monic dense polynomial in one variable over Z.
.TP 4
.B W1
is a vector of polynomials in r1 variables over the number field generated by F.
.TP 4
.B V1
is the variable list corresponding to W1.
.TP 4
.B P2
is a polynomial in r2 variables over the number field generated by F.
.TP 4
.B V2
is the variable list corresponding to P2.
.TP 4
.B Vn
is a list containing one of the elements of V1.
.TP
.B *pV3
is the variable list where the union of the two lists
V1 and V2 will be stored in alphabetical order.
M*/







/*H
	Version 1       22.09.1992      U.Schneiders
   DATE vpnftransf    : 921130
H*/

#include <_matr3.h>

vec vpnftransf( r1, F, W1, V1, r2, P2, V2, Vn, pV3 )
single r1;
pol F;
vec    W1;
list   V1;
single r2;
pol    P2;
list   V2, Vn, *pV3;

{
	list L, pV;
	pol  a, b;

	bind( F, W1, V1, P2, V2, Vn );
	init( L, pV, a, b );

	L = _0;
	while ( W1 != _0 )
	{
	   a = lfirst( W1 );
	   b = pnftransf( r1, F, a, V1, r2, P2, V2, Vn, &pV );
	   L = lcomp( b,  L );
	   W1 = lred( W1 );
	}
	L = linv( L );

/* Ausgabe */

	( *pV3 ) = pV;
	return( L );
}


