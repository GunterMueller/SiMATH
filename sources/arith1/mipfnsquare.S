/*M
.SH NAME
mipfnsquare - modular integer prime, find non-square

.SH SYNOPSIS
.nf
#include <_arith1.h>

int mipfnsquare (p)
int p;

.SH DESCRIPTION
mipfsquare() returns a quadratic non-residue c modulo p.
The integer p > 2 is a probable prime number.
If p is prime, then c is a quadratic non-residue modulo p with 0 < c < p.
If p is composite, then c = -1 (the more likely case) or
0 < c < p but c is not necessarily a non-square mod p.
.PP
A sequence of values c1, c2,... generated by
mipfnsquare() is non-constant if p > 3.
.PP
The output of mipfnsquare() depends on the global variable
SEMIRAND. For a description of SEMIRAND, see irand().
M*/

/*H
	Version 1	17.05.1992	Georg Lay
	Version 2	01.05.1996	Neue Doku	GL
   DATE mipfnsquare   : 921130.9612__
H*/

#include <_arith1.h>

int mipfnsquare (p)
int 		 p;
 {
 single k;
 int   c;
 init (c);

 do							/* c ist quadr. Nicht-	*/
   {							/* rest mod p		*/
   while ((c = irand (p)) == 0);

   k = ipjacsym (c,p);
   if (k == 0 || k == -2)	return (-1);		/* p nicht prim		*/
   }
 while (k == 1);
 
 return (c);
 }


