/*M
.SH NAME
cdmarfmsp1hr - common denominator matrix of rational functions over modular single prime, transcendence degree 1, hermitian reduction

.SH SYNOPSIS
.nf
#include<_matr2.h>

matrix cdmarfmsp1hr(p, M)
single p;
matrix M;

.SH DESCRIPTION
Let k be the least common multiple of all non-zero entries of M.
Let Mpol be the matrix k*M, i.e. a matrix of polynomials in one variable over Z/pZ.
The number of columns of Mpol must be equal to the rank of Mpol.
Let R be the module generated by the rows of Mpol over Z/pZ [x].
Finally, let Mred be the square upper triangular matrix over Z/pZ [x],
whose rows form a (Z/pZ) [x] basis of R in Hermite normal form.

Then cdmarfmsp1hr() returns the matrix Mr = (1/k) * Mred of rational functions over Z/pZ.

.PP
.TP 4
.B p
must be prime.
.TP 4
.B M
is a CD-matrix of of rational functions over Z/pZ, see cdmarfmsp1id.

.SH SEE ALSO
cdmarfmsp1id
M*/



/*H
	Version 1       15.12.89        J.Schmitt
   DATE cdmarfmsp1hr  : 901120
H*/

#include<_matr2.h>

matrix cdmarfmsp1hr(p,M)
single p;
matrix M;
{
	matrix M1, M2, Mz;
	single h;
	pol z, ml, D;
	bind(M);
	init(z,ml,D,M1,M2,Mz);

	M1 = M;
	ml = list2(0,1);
	while (M1 != _0) {
		Mz = lfirst(M1);
		M1 = lred(M1);
		z = lfirst(Mz);
		D = pmsprod(1,p,z,ml);
		z = upmsgcd(p,z,ml);
		ml = pmsquot(1,p,D,z);
	}
	M2 = _0;
	M1 = M;
	while (M1 != _0) {
		Mz = lfirst(M1);
		M1 = lred(M1);
		z = lfirst(Mz);
		Mz = lred(Mz);
		z = pmsquot(1,p,ml,z);
		Mz = vecpmssmul(1,p,z,Mz);
		M2 = lcomp(Mz,M2);
	}
	h  = llength(Mz);
	M2 = linv(M2);
	M1 = maupmshermsp(p,M2,h,&D);
	M2 = M1;
	while ( M2 != _0) {
		Mz = lfirst(M2);
		Mz = lcomp(ml,Mz);
		lsfirst(M2,Mz);
		M2 = lred(M2);
	}
	return(M1);
}
