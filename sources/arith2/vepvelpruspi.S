/*M
.SH NAME
vepvelpruspi - values of the extensions of the p-adic valuation of an element of the polynomial ring of an univariate separable polynomial over the integers

.SH SYNOPSIS
.nf
#include<_arith2.h>

list vepvelpruspi(F, a, p, k, v)  
pol F, a; 
single p, k, v;

.SH DESCRIPTION
.TP 4
.B F 
is a monic, seperable and univariate polynomial in the unknown x over Z of degree > 1.
.TP 4
.B a 
is an element in R :=  Z[x] / (F * Z[x]), a is represented by an univariate polynomial over Z of degree smaller than deg(F).
.TP 4
.B p 
is a single prime.
.TP 4
.B k 
is an integer number greater than 1, such that the smallest power of two greater or equal to 2*k is still a single, p^k does not divide the reduced discriminant of F (s. upireddiscc).
.TP 4
.B v
is a non negative integer number, such that the smallest number, say z, greater or equal to v, with z/k being a power of two, is still a single.
.PP
vepvelpruspi returns a list, say L, containing  two other lists, say L1 and L2.
.PP
L1 = (F_1, k_1, ... F_r, k_r) for a positive single r. For 1 <= i <= r, F_i denotes a monic polynomial in x over Z of positive degree, such that
.IP
F = F_1 * ... * F_r mod p^(2*k) holds.
.PP
The coefficients of the F_i's are in [0, p^t-1], where t is the smallest power of two greater or equal to 2*k.
.PP
Let F = A_1 * ... * A_s be the factorization of F over the p-adic integer number into monic and irreducible polynomials A_i. Then r = s and , with suitable numeration, A_i = F_i mod p^(2*k).
.PP
Let O denote the ring of integer in K := Q(x) / (F*Q(x)), and let (p) denote the principal ideal generated by p in 0, then (p) has a factorization in r different prime ideals, say P_i, of the form:
.IP
p*O = (P_1)^e_1* ... *(P_r)^e_r, with r as above.
.PP
Let O_i denote the ring of integers in K_i := Q(x) / (A_i*Q(x)), then there are prime ideals (R_i) in O_i, such that 
.IP
p*0_i = (R_i)^e_i, for 1 <= i <= r.
.PP
The k_i's are positive integer number, such that 
.IP
k_i * e_i = deg(F_i) = deg(A_i).
.PP
In all likelihood, the k_i's are the residue class degrees of the regarding prime ideals P_i.     
.PP
L2 = (v1, ..., v_r), whereat the v_i's are integer numbers greater or equal to -2.
.PP
Let V_(P_i) be the normed extension of the p-adic valuation v_p, given by the prime ideal P_i, and let K* be the set of non zero-divisors in K, then V_(P_i) (K*) = Z.
.PP
For v = 0, v_i is not equal to -1, v_i = -2 if V_(P_i) (a) = infinit and V_(P_i) (a) = v_i else.
.PP
For v > 0,  v_i = -2 if V_(P_i) (a) = infinit, v_i = -1 if V_(P_i) (a) >= (s/k_i) and V_(P_i) (a) = v_i else, where s the smallest number greater or equal to v, such that s/k is a power of two.
.PP
So, if only a lower bound, say S, for the values of V_(P_i) is needed, you can choose S*deg(F) for v, because  k_i <= deg(F_i) <= deg(F), and
V_(P_i) (a) >= (s / k_i) >= (v / k_i) >= (v / deg(F)) = S. 
 
M*/

/*H
	Version 1       10.03.1990      J.Schmitt
	Version 2       05.07.1991      ueberfl. Variable i beseitigt.  PS
	Version 3	06.02.1993	Name des static moduls geaendert,
					Hensel-Fakt. nun bis 2*k.	
					Dokumentation geaendert. JS
   DATE vepvelpruspi  : 900301.910715.9109__.9203__.930531.9311))
H*/


#include<_arith2.h>

static list vepvelprusps(pol,pol,single,single);

vepvelpruspi( F, a, p, k, v )
pol F, a;
single p, k, v;
{
	int M11,p_k;
	pol A1,A2,A3,T,h,M3;
	single k2,z,l,i,j,m,an,ao,ap,aq,as,s,ent;
	list M1,M2,V2,L1,L2,L3,L4,MM,L7,Lh2,Lhh,N1,N2,N3,N4;
	bind(F,a);
	init(M11,p_k,A1,A2,A3,T,h,M3);
	init(M1,M2,V2,L1,L2,L3,L4,MM,L7,Lh2,Lhh,N1,N2,N3,N4);

	h  = pitopms(1,F,p);	
	L3 = upmscfacts(p,h);
	L1 = _0;
	L4 = _0;
	while ( L3 != _0 ) {
		A1 = lfirst(L3);
		L3 = lred(L3); 
		L4 = lcomp(A1,L4);
		l  = lfirst(L3);
		L3 = lred(L3);
		if ( l != 1 ) A1 = pmsexp(1,p,A1,l);			
		L1 = lcomp(A1,L1);
	}
   	L3 = linv(L1);          
	L4 = linv(L4);
	L7 = L4;

	M11 = iexp(p,k);
	M11 = iprod(M11,M11);
	if ( lred(L3) == _0 ) {
		p_k = p;
		while ( icomp(M11,p_k) == 1 ) p_k = iprod(p_k,p_k);
		M3 = pitopmi(1,F,p_k);
		A1 = list1(M3);
		A2 = list2(0,1);
		A2 = list1(A2);
		L2 = list2(A1,A2);
	}
	else {
	        L2 = upihli(p,h,L3);
	        L1 = L3;
	        A1 = list2(0,1);
  	        while ( L1 != _0 ) {
			A1 = piprod(1,A1,lfirst(L1));
			L1 = lred(L1);
 	        }
	        L2  = list3(L3,L2,A1);
	        p_k = p;
	        while ( icomp(M11,p_k) == 1 ) {
		 L2 = upihlqs(p,p_k,1,F,lfirst(L2),lsecond(L2),lthird(L2));
 		 p_k = iprod(p_k,p_k);
	        }
	        M3 = lthird(L2);
	}                     
	M1  = lfirst(L2);
	M2  = lsecond(L2);

	k2  = k;                                  
	N1  = _0;
	Lh2 = _0;
	T   = pigcdcf(1,F,a,&A1,&A2);

    for ( ; ; ) {
                        
	if ( k2 > k ) {                                  
		L2  = upihlqs(p,p_k,1,F,M1,M2,M3);
		p_k = iprod(p_k,p_k);
		M1  = lfirst(L2);
		M2  = lsecond(L2);
		M3  = lthird(L2);
		M11 = iprod(M11,M11);                                              
		N3  = N4;
		N1  = linv(N2);
	}                 
	N2  = _0;

	L2 = lfirst(L2);

	L1 = _0;
        L4 = L7;
	while ( L2 != _0) {
		A1  = lfirst(L2);
		L2  = lred(L2);                 
		A3  = lfirst(L4);  
		m   = pdegree(1,A3);
		L4  = lred(L4);
		if ( N1 == _0 ) {
		  L3 = vepvelprusps(A1,A3,p,k2);
		  an = (-1);
		}
		else {
		  an = lfirst(N1);
		  if ( (an) && (an != 1) ) L3 = vepvelprusps(A1,A3,p,k2);
 		  else L3 = _0;
		  N1 = lred(N1);
		}			

		if ( L3 == _0 ) {
		  if ( an == (-1) ) N2 = lcomp(1,N2);
		  else  N2 = lcomp(an,N2);
		  L1 = lcomp2(A1,m,L1);	                                    
		}
		else {
		  L1 = lconc(L3,L1);
		  if ( an == (-1) ) {
			an = llength(L3);
			an = an / 2;
		  }
		  N2 = lcomp(an,N2);
		}
	}
	if ( k2 == k ) {
		MM = L1;
		N1 = N2;
		N3 = N2;
		N4 = N2;
	}               
	else N1 = linv(N2);
	N2  = _0;            
	as  = 0;                                              
	Lhh = _0;                                     
	ent = 0;

	i = v % 2;
	v = v / 2;
	v = v + i;

	while ( L1 != _0 ) {          
		A1 = lfirst(L1);
		L1 = lred(L1);	                 
		m  = lfirst(L1);
		L1 = lred(L1);	 
		if ( as == 0 ) {
			ao = lfirst(N3);
			N3 = lred(N3);                
			an = lfirst(N1);
			N1 = lred(N1);
			as = ao;
			s  = 0;
		}                               
		as = as - 1;
        	if (!an) { 
			N2 = lcomp(0,N2);
			for (j=1;j<=ao;j++) {
				ap  = lfirst(Lh2);
				Lh2 = lred(Lh2);		  
                        	Lhh = lcomp(ap,Lhh);
			}
			if (L1==_0) {
				Lh2 = linv(Lhh);	
			 	if ( !ent || ((v)&&(v<=k2)) ) {
					MM = list2(MM,Lh2);
					return(MM);
				}	
			}                
			as = 0;
		}			 
      		else {                  
			aq = 0;	
			if ( Lh2 != _0 ) {
				ap  = lfirst(Lh2);
				Lh2 = lred(Lh2);
				if ( ap != (-1) ) {
					Lhh = lcomp(ap,Lhh);
					if ( as == 0 ) {
					  if (!s) N2 = lcomp(0,N2);
					  else    N2 = lcomp(an,N2);
					}
					if (L1==_0) {
					  Lh2 = linv(Lhh);	
			 		  if ( !ent || ((v)&&(v<=k2)) ) {
						MM = list2(MM,Lh2);
						return(MM);
					  }	
					}                
				}
				else aq = 1;
			}                   
			else aq = 1;
			if (aq) {
				h = pmirem(1,M11,T,A1);
				if (!h) {
					if ( as == 0 ) {
					  if (!s) N2 = lcomp(0,N2);
					  else    N2 = lcomp(an,N2);
					}
					Lhh = lcomp((-2),Lhh);
					if (L1==_0) {
					  Lh2 = linv(Lhh);	
					  if ( !ent || ((v)&&(v<=k2)) ) {
						MM = list2(MM,Lh2);
						return(MM);
					  }	
					}
				}
			        else {  
					h = pitopmi(1,a,M11);
					h = pmirem(1,M11,h,A1);
					V2 = normelpruspi(A1,h);
					V2 = irem(V2,M11);
					if ( !V2 ) {
					  s   = 1;
					  if ( as == 0 ) N2 = lcomp(an,N2);
					  ent = (-1);  
					  Lhh = lcomp(ent,Lhh);
					  if ( L1 == _0 ) {
						Lh2 =  linv(Lhh);
						if ( ((v)&&(v<=k2)) ) {
							MM = list2(MM,Lh2);
							return(MM);
						}
					  }
					}		
					else {
					  z = iaval(p,V2);
					  z = iquot(z,m);
					  Lhh = lcomp(z,Lhh);
					  if ( as == 0 ) {
					    if (!s) N2 = lcomp(0,N2);
					    else    N2 = lcomp(an,N2);
					  }
					  if ( L1 == _0 ) {
					    Lh2 = linv(Lhh);
					    if ( !ent || ((v)&&(v<=k2)) ) {
						MM = list2(MM,Lh2);
						return(MM);
					    }
					  }	   
				 	}
				}
			}
		}
	} 
	k2  = k2 + k2; 
    }
}



/*c
	vepvelprusps ist ein static modul zu vepvelpruspi.
c*/

static list vepvelprusps(F,mp,p,t)
pol F, mp;
single p, t;
{

	list M,B,B2,Bl,M1,M1H;
	single n,na,wy,ent4,r,i,e,k,l,d,m;
	rat va,vb,vc;
	int pp,p2,MOD,R2,Q;
	pol U,G,H,y;
	pol a0,mpa0,a1,a2,alb,b0,mpb0,b1,b2,blb,c0,mpc0,c1,c2,clb;
	bind(F,mp);
	init(M,B,B2,Bl,M1,M1H,va,vb,vc,pp,p2,MOD,R2,Q,U,G,H,y);
	init(a0,mpa0,a1,a2,alb,b0,mpb0,b1,b2,blb,c0,mpc0,c1,c2,clb);

                 
	Q  = iexp(p,t);	

	ent4 = 1;
	n = lfirst(F);                   
	m = pdegree(1,mp);
	U = list3(1,1,1);
	G = pitopms(1,F,p);
	G = pmsquot(1,p,G,mp);
	H = piprod(1,mp,G);
	H = pidif(1,F,H);
	H = piiquot(1,H,p);
	H = pitopms(1,H,p);
	G = upmsgcd(p,G,H);

	if ( lfirst(G) == 0 ) return(_0);                

	wy = 1;
	y = 0;
	if ( lred2(mp) == _0 ) {
		a0 = list5(1,1,1,0,-1);
		mpa0 = list4(1,1,0,1);
	}
	else {
		a0 = U;
		mpa0 = mp;
	}

	for ( ; ; ) {
	    for ( ; ; ) {
		if ( ent4 == 1 ) {
			na = lfirst(mpa0);
			na = n / na;
			if ( na == 1 ) {
				y  = 0;
				wy = 1;
			}
			if ( na == wy ) return(_0);                

			va = ippnferegul1(F,p,Q,a0,mpa0,&a1,&a2);
			i = rden(va);
			if ( i == na ) return(_0);                   

			pp = p;
			sqrem(0,i,wy,&d,&r);
			if ( r != 0 ) {
			       alb = ippnfeidpval(F,p,a0,a2,i,y,wy,&y,&wy);
			}
			else {
				if ( i == 1 ) pp = iprod(p,p);
				if ( rnum(va) == 1 ) break;
				alb = cdprsum(a0,a2);
			}
		}
		ent4 = 1;
		mpa0 = infepptfact(F,p,Q,pp,a0,alb);
		alb=lsecond(mpa0);
                if (llength(mpa0)==2) mpa0=lfirst(mpa0);
		else {
			M = lred2(mpa0);        
			M = lfirst(M);
			M1 = lfirst(M);
			M  = lred(M);
			M1H = vepvelprusps(M1,mp,p,t);
			if ( M1H == _0 ) M1H = list2(M1,m);
			M1 = lfirst(M);
			M = vepvelprusps(M1,mp,p,t);
			if ( M == _0 ) M1H = lcomp2(M1,m,M1H);
			else M1H = lconc(M,M1H);
			return(M1H);
		}
		a0 = alb;
	    }

	    y = a2;
	    wy = rden(va);
	    clb = list3(1,0,1);
	    B = list2(U,a0);
	    B = oibasisfgen(F,B);
	    B = cdprlfcdmar(B);
	    p2 = iprod(p,p);
	    b0 = nfeexpspec(F,a2,wy,p2);
	    b0 = cdpriquot(b0,p);
	    if ( modielemtest(B,b0) == 0 ) {
		a1 = a2;
		pp = p;
		MOD = 1;
	    }
	    else {
		B = list1(a0);
		B = oibasisfgen(F,B);
		B = cdprlfcdmar(B);
		B2 = B;
		MOD = 1;
		while ( B2 != _0 ) {
			Bl = lfirst(B2);
			B2 = lred(B2);
			MOD = iprod(MOD,lthird(Bl));
		}
		p2 = ilcm(pp,MOD);
		a1 = cdprzmodhom(a1,p2);
		pp = p;
		p2 = ilcm(p,MOD);
		p2 = iprod(p2,p);
		b0 = nfeexpspec(F,a1,wy,p2);
		b0 = cdpriquot(b0,p);
	    }

	    for ( ; ; ) {
		mpb0 = infepptfact(F,p,Q,p,a0,b0);
		b1=lsecond(mpb0);
                if (llength(mpb0)==2) mpb0=lfirst(mpb0);
		else {
			M = lred2(mpb0);        
			M = lfirst(M);
			M1 = lfirst(M);
			M  = lred(M);
			M1H = vepvelprusps(M1,mp,p,t);
			if ( M1H == _0 ) M1H = list2(M1,m);
			M1 = lfirst(M);
			M = vepvelprusps(M1,mp,p,t);
			if ( M == _0 ) M1H = lcomp2(M1,m,M1H);
			else M1H = lconc(M,M1H);
			return(M1H);
		}
		p2 = ilcm(p,MOD);
		b0 = cdprzmodhom(b0,p2);
		alb = cdprsum(a0,b0);
		i = lfirst(mpa0);
		r = lfirst(mpb0);
		sqrem(0,i,r,&i,&r);
		if ( r != 0 ) {
			ent4 = 0;
			break;
		}
		vb = ippnferegul1(F,p,Q,b0,mpb0,&b1,&b2);
		i = rden(va);
		r = rden(vb);
		sqrem(0,i,r,&i,&r);
		if ( r != 0 ) {
			i = rden(va);
			r = rden(vb);
			alb = ippnfeidpval(F,p,a0,a2,i,b2,r,&y,&wy);
			ent4 = 0;
			break;
		}
		B2 = infepptfact(F,p,Q,p,a0,alb);
		Bl=lsecond(B2);
                if (llength(B2)==2) B2=lfirst(B2);
		else {
			M = lred2(B2);        
			M = lfirst(M);
			M1 = lfirst(M);
			M  = lred(M);
			M1H = vepvelprusps(M1,mp,p,t);
			if ( M1H == _0 ) M1H = list2(M1,m);
			M1 = lfirst(M);
			M = vepvelprusps(M1,mp,p,t);
			if ( M == _0 ) M1H = lcomp2(M1,m,M1H);
			else M1H = lconc(M,M1H);
			return(M1H);
		}
		R2 = iprod(Q,MOD);
		e = iaval(p,R2);
		l = na * e;
		l = l - 1;
		p2 = p - 1;
		do {
			k = l;
			l = l + na;
			l = l - p2;
			p2 = isprod(p2,p);
		} while ( l > k );
		B2 = itor(k);
		Bl = itor(n);
		B2 = rquot(B2,Bl);
		l = rceil(B2);
		k = lfirst(mpa0);
		k = k * l;
		p2 = iexp(p,k);
		blb = nfeexpspec(F,b0,p2,R2);
		p2 = ilcm(p,MOD);
		blb = cdprzmodhom(blb,p2);
		B2 = pineg(1,lred(b0));
		lsred(b0,B2);
		B2 = cdprsum(blb,b0);
		c0 = nfeprodspec(F,B2,clb,0);
		mpc0 = list2(1,1);

		vc = ippnferegul1(F,p,Q,c0,mpc0,&c1,&c2);
		p2 = rfloor(vc);
		p2 = p2 + 1;
		p2 = iexp(p,p2);
		R2 = ilcm(p2,MOD);
		c0 = cdprzmodhom(c0,R2);
		i = rden(va);
		r = rden(vc);
		sqrem(0,i,r,&i,&r);
		if ( r != 0 ) {
			i = rden(va);
			r = rden(vc);
			alb = ippnfeidpval(F,p,a0,a2,i,c2,r,&y,&wy);
			ent4 = 0;
			break;
		}

		B2 = rquot(vc,va);
		k = rnum(B2);
		clb = nfeexpspec(F,a1,k,R2);

		b0 = list3(1,0,p2);
		do {
			B2 = pigcdcf(1,F,lred(clb),&Bl,&R2);
			if ( lfirst(B2) ) clb = cdprsum(clb,b0);
		} while ( lfirst(B2) );

		Bl = cdprinv(F,clb);
		R2 = intpp(p,MOD);
		R2 = iquot(MOD,R2);

		p2 = lfirst(Bl);
		Bl = lred(Bl);
		p2 = intpp(p,p2);

		Bl = piiprod(1,Bl,R2);
		Bl = lcomp(p2,Bl);

		b0 = nfeprodspec(F,c0,Bl,0);
	    }
	}
}
