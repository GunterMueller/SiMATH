/*M
.SH NAME
oibasisfgen - order over the integers basis from generators

.SH SYNOPSIS
.nf
#include<_arith2.h>

list oibasisfgen(F, L)
pol F; 
list L;
   
.SH DESCRIPTION
.TP 4
.B F
is the defining polynomial of a separable algebra (say A) over the rational numbers, i.e. F is a monic,  separable and univariate polynomial over the integer numbers.
.TP 4
.B L
is a non empty list of CD-polynomials over the rational numbers, representing elements of A (s. cdprfcl).
.PP
Let n be the degree of F, and a the element of A represented by the first polynomial in L, then the elements 
.IP
1, a, a^2, ..., a^(n-1)
.PP
are linearly independend over Z.
.PP
oibasisfgen returns a CD-matrix over the rational numbers, say M.
The rows of M represent (as list of coefficients) elements of A. These elements form a basis in Hermite normal form of the Z-order, generated by the elements represented by L over Z (s.cdmarid).

.SH SEE ALSO
 cdmarid 
 cdprfcl

M*/
                
/*H
	Version 1       29.05.89        J.Schmitt                      
   DATE oibasisfgen   : 891101.9001__
H*/

#include<_arith2.h>

list oibasisfgen(F,L)
pol F;
list L;
{
	pol a,b;
	list M,Ml,Mp;
	single i,j,t,n;
	init(a,b,M,Ml,Mp);
	bind(F,L);

	n = lfirst(F);
	a = lfirst(L);
	L = lred(L);
	b = list3(1,1,1);
	t = oequal(a,b);

	b = list3(1,0,1);
	M = _0;
	for (i=1;i<=n;i++) {
		Ml = clfcdpr(b,n);
		M = lcomp(Ml,M);
		b = nfeprodspec(F,a,b,0);
	}
	if ( t == 0 ) M = cdmarhermred(M);
	while ( L != _0 ) {
		a = lfirst(L);                              
		L = lred(L);
		if ( t ) a = cdprzmodhom(a,1);      
		i = 1;
		while ( (i<n) && (a!=0) ) {
			Mp = M;
			for (j=1;j<=n;j++) {
				Ml = lfirst(Mp);
				Mp = lred(Mp);
				b = cdprfcl(Ml);
				b = nfeprodspec(F,a,b,t);
				if ( b != 0 ) {
					Ml = clfcdpr(b,n);
					M = lcomp(Ml,M);
				}
			}  
			M = cdmarhermred(M);                                           
			a = nfeprodspec(F,a,a,t);
			i = i + i;
		}
	}
	return(M);
}
