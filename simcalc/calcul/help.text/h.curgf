                               * * * * * * *
                               *   curgf   *
                               * * * * * * *

        "current Galois-field"
        SYNTAX: X = curgf(p,A,Q)

        p is a single precision prime, (including 2).
        A is a variable.
        Q is an expression whose value is a univariate irreducible 
        polynomial over Z or over Z/pZ of degree greater than 1 in the 
        variable A or the degree n of GF(p^n).

        If Q is a polynomial, X is assigned the value of Q, if Q is monic
        and the value of a^(-1)*Q mod p if the first coefficient of Q is 
        a != 1. 
        Otherwise, if Q is the degree n, X is assigned a randomly 
        generated, irreducible, monic polynomial in the variable A over 
        Z/pZ of degree Q=n.
        X is stored in the variable curGaloisField.

        curgf specifies the current Galois-field GF(p^n) = Z/pZ(al)
        where al is a root of X.
        If it is possible, the user is asked if he wants to embed the
        variables over the old Galois-field in the new one. Then all
        structures over the old Galois-field are isomorphically 
        embedded in the new one. Otherwise those elements are 
        considered such as they are as elements of the recently 
        specified Galois-field GF(p^n).
        They are entered and displayed by the symbol 'GF' as 
        polynomials in the variable A. In characteristic 2 they can
        also be entered by the symbol 'GF2bit'.

        If p = 2 and the user is embedding elliptic curves, of which he 
        knows the number of points, over the old Galois-field into the
        new one, he can get the number of points over the new one.


        Example 1: (correct)

                X = curgf(5,A,A^3+2*A^2+A+4)

        
        Example 2: (correct)

                curgf(2,A,8) 


        Example 3: (incorrect)

                curgf(4,A,5)

_ERR_NR_263
